<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean id="personDao" class="myAOPtest.D_测试直接使用spring的aop代理机制.PersonDaoImpl"></bean>
    <bean id="transaction" class="myAOPtest.D_测试直接使用spring的aop代理机制.Transaction"></bean>

    <aop:config>
        <!--切入点表达式 确定目标类 -->  <!--这里怎么指定只目标类的部分方法增加transaction的功能？ 查看最下面的总结 -->
        <aop:pointcut expression="execution(* myAOPtest.D_测试直接使用spring的aop代理机制.PersonDaoImpl.*(..))" id="haha"/>

        <!-- ref指向对象就是切面 -->
        <aop:aspect ref="transaction">
            <aop:before method="beginTransaction" pointcut-ref="haha"/>
            <aop:after-returning method="commit" pointcut-ref="haha"/>
        </aop:aspect>
    </aop:config>



</beans>

<!--

aop切入点表达式   https://www.cnblogs.com/imzhuo/p/5888007.html
                  https://www.cnblogs.com/rekent/p/7251809.html

     语法结构：   execution(   方法修饰符  方法返回值  方法所属类 匹配方法名 (  方法中的形参表 )  方法申明抛出的异常  )
　　其中红色字体的部分时不能省略的，各部分都支持通配符 “*” 来匹配全部。
　　比较特殊的为形参表部分，其支持两种通配符
　　"*"：代表一个任意类型的参数；
　　“..”：代表零个或多个任意类型的参数。
　　例如：
　　　　（）匹配一个无参方法
　　　　（..）匹配一个可接受任意数量参数和类型的方法
　　　　（*）匹配一个接受一个任意类型参数的方法
　　　　（*，Integer）匹配一个接受两个参数的方法，第一个可以为任意类型，第二个必须为Integer。

1、切入点表达式：对指定的方法进行拦截，并且生成代理表达式。

2、拦截所有public方法
<aop:pointcut expression="execution(public * *(..))" id="pt"/>

3、拦截所有save开头的方法
<aop:pointcut expression="execution(* save*(..))" id="pt"/>

4、拦截指定类的指定方法
<aop:pointcut expression="execution(public * 包名.类名.方法名(..))" id="pt"/>

5、拦截指定类的所有方法
<aop:pointcut expression="execution(* 包名.类名.*(..))" id="pt"/>

6、拦截指定包，以及其自包下所有类的所有方法
<aop:pointcut expression="execution(* cn..*.*(..))" id="pt"/>

7、多个表达式
<aop:pointcut expression="execution(* 包名.类名.方法名()) || execution(* 包名.类名（不同的类）.方法名())" id="pt"/>
<aop:pointcut expression="execution(* 包名.类名.方法名()) or execution(* 包名.类名（不同的类）.方法名())" id="pt"/>

8、取非值
<aop:pointcut expression="!execution(* 包名.类名.方法名())" id="pt"/>
<aop:pointcut expression=" not execution(* 包名.类名.方法名())" id="pt"/>


-->